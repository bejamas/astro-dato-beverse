---
import queryCMS from '../lib/cms';
import getAvailableLocales, { getFallbackLocale } from '../lib/i18n';
import { getRelativeLocaleUrl } from 'astro:i18n';
import LanguageSwitcher  from './LanguageSwitcher.astro';
// exclude homepage link from nav in homepage. ( /fr || /fr/ ) checks for both with our without slash pathname.
const isHome = Astro.url.pathname === getRelativeLocaleUrl(Astro.currentLocale) || Astro.url.pathname === getRelativeLocaleUrl(Astro.currentLocale).replace(/\/$/, "");

const fallbackLocale = await getFallbackLocale();
const { locale } = Astro.params;

const query = `
  query Query($locale: SiteLocale, $fallbackLocale: [SiteLocale!]) {
    _site {
      globalSeo {
        siteName
      }
    }
    layout(locale: $locale, fallbackLocales: $fallbackLocale) {
      navLinks {
        label
        slug
      }
    }
  }
`;

const { _site, layout } = await queryCMS(query, { locale, fallbackLocale });

const { logo } = Astro.props;
---

<header class="col-start-2 p-4 border-x border-border">
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-6 items-center">
    <img src={logo.url} alt={logo.alt} width="220" class="select-none" />
    <div class="flex justify-end gap-4">
      <nav>
        <ul class="flex justify-end gap-4">
          {!isHome && (
            <li>
              <a href={getRelativeLocaleUrl(Astro.currentLocale, '/')} class="cta rounded-sm bg-card px-2 py-1 text-xs select-none uppercase">
                {_site.globalSeo.siteName}                
              </a>
            </li>
          )}
          {layout.navLinks.map((item) => (
            <li>
              <a href={getRelativeLocaleUrl(Astro.currentLocale, `/${item.slug}`)} class="cta rounded-sm bg-card px-2 py-1 text-xs select-none uppercase">
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      <div class="flex gap-7">
        <LanguageSwitcher />
      </div>
    </div>
  </div>
</header>
