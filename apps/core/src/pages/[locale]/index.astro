---
import "../../styles/global.css";
import Layout from '../../layouts/Layout.astro';
import queryCMS from '../../lib/cms';
import getAvailableLocales, { getFallbackLocale } from '../../lib/i18n';
import Hero from '../../components/Hero.astro';
import Heading from '../../components/Heading.astro';
import BrandShowcase from '../../components/BrandShowcase.astro';
import ContactForm from '../../components/ContactForm.astro';
import Line from '../../components/Line.astro';

export async function getStaticPaths() {
  const availableLocales = await getAvailableLocales();  
  return availableLocales.map(locale => ({
    params: { locale }
  }));
}

const fallbackLocale = await getFallbackLocale();
const { locale } = Astro.params;

const query = `
  query Query($locale: SiteLocale, $fallbackLocale: [SiteLocale!]) {
    layout {
      logo {
        url
        alt
      }
    }
    home(locale: $locale, fallbackLocales: $fallbackLocale) {
      _seoMetaTags {
        tag
        attributes
        content
      }
      sections(locale: $locale, fallbackLocales: $fallbackLocale) {
        ... on HeadingRecord {
          id
          _modelApiKey
          index
          label
        }
        ... on HeroSectionRecord {
          id
          _modelApiKey
          heroTitle
          heroSubtitle
          heroImage {
            alt
            url
          }
          ctas {
            label
            slug
            variant
          }
        }
        ... on BrandsSectionRecord {
          id
          _modelApiKey
          brands {
            productType
            name
            images {
              url
              alt                        
            }
            accentColor {
              hex
            }
            slug
          }
        }
        ... on ContactSectionRecord {
          id
          _modelApiKey
          title
          subtitle
          submitUrl
          submitLabel
          messagePlaceholder
          messageLabel
          logos {
            image {
              url
              alt
            }
          }
          emailPlaceholder
          emailLabel
          companyTitle
          companyLogo {
            alt
            url
          }
        }
      }     
    }
  }
`;

const { home, layout } = await queryCMS(query, { locale, fallbackLocale });
---

<Layout additionalSeo={home._seoMetaTags} logo={layout.logo}>    
  {
    home.sections.map((item: any) => {
      switch (item._modelApiKey) {
        case 'heading':
          return (
            <Heading index={item.index} text={item.label} />
            <Line />
          );
        case 'hero_section':
          return <Hero hero={item} />;
        case 'brands_section':
          return <BrandShowcase brands={item} />;
        case 'contact_section':
          return <ContactForm form={item} />;
        default:
          return null;
      }
    })
  }   
</Layout>